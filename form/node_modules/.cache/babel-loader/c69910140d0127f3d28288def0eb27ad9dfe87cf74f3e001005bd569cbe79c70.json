{"ast":null,"code":"var _jsxFileName = \"E:\\\\Test-React\\\\form\\\\src\\\\components\\\\Login\\\\Login.jsx\";\nimport React from 'react';\nimport { Formik } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Any place in your app!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        email: '',\n        password: ''\n      },\n      validate: values => {\n        const errors = {};\n        if (!values.email) {\n          errors.email = 'Required';\n        } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n          errors.email = 'Invalid email address';\n        }\n        return errors;\n      },\n      onSubmit: (values, _ref) => {\n        let {\n          setSubmitting\n        } = _ref;\n        setTimeout(() => {\n          alert(JSON.stringify(values, null, 2));\n          setSubmitting(false);\n        }, 400);\n      },\n      children: _ref2 => {\n        let {\n          isSubmitting\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            type: \"email\",\n            name: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"email\",\n            component: \"div\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            type: \"password\",\n            name: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"password\",\n            component: \"div\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: isSubmitting,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 9\n  }, this);\n};\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","Formik","Login","email","password","values","errors","test","setSubmitting","setTimeout","alert","JSON","stringify","isSubmitting"],"sources":["E:/Test-React/form/src/components/Login/Login.jsx"],"sourcesContent":["import React from 'react'\r\nimport { Formik } from 'formik';\r\nconst Login = () => {\r\n    return (\r\n        <div>\r\n            <h1>Any place in your app!</h1>\r\n            <Formik\r\n                initialValues={{ email: '', password: '' }}\r\n                validate={values => {\r\n                    const errors = {};\r\n                    if (!values.email) {\r\n                        errors.email = 'Required';\r\n                    } else if (\r\n                        !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n                    ) {\r\n                        errors.email = 'Invalid email address';\r\n                    }\r\n                    return errors;\r\n                }}\r\n                onSubmit={(values, { setSubmitting }) => {\r\n                    setTimeout(() => {\r\n                        alert(JSON.stringify(values, null, 2));\r\n                        setSubmitting(false);\r\n                    }, 400);\r\n                }}\r\n            >\r\n                {({ isSubmitting }) => (\r\n                    <Form>\r\n                        <Field type=\"email\" name=\"email\" />\r\n                        <ErrorMessage name=\"email\" component=\"div\" />\r\n                        <Field type=\"password\" name=\"password\" />\r\n                        <ErrorMessage name=\"password\" component=\"div\" />\r\n                        <button type=\"submit\" disabled={isSubmitting}>\r\n                            Submit\r\n                        </button>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,QAAQ;AAAC;AAChC,MAAMC,KAAK,GAAG,MAAM;EAChB,oBACI;IAAA,wBACI;MAAA,UAAI;IAAsB;MAAA;MAAA;MAAA;IAAA,QAAK,eAC/B,QAAC,MAAM;MACH,aAAa,EAAE;QAAEC,KAAK,EAAE,EAAE;QAAEC,QAAQ,EAAE;MAAG,CAAE;MAC3C,QAAQ,EAAEC,MAAM,IAAI;QAChB,MAAMC,MAAM,GAAG,CAAC,CAAC;QACjB,IAAI,CAACD,MAAM,CAACF,KAAK,EAAE;UACfG,MAAM,CAACH,KAAK,GAAG,UAAU;QAC7B,CAAC,MAAM,IACH,CAAC,0CAA0C,CAACI,IAAI,CAACF,MAAM,CAACF,KAAK,CAAC,EAChE;UACEG,MAAM,CAACH,KAAK,GAAG,uBAAuB;QAC1C;QACA,OAAOG,MAAM;MACjB,CAAE;MACF,QAAQ,EAAE,CAACD,MAAM,WAAwB;QAAA,IAAtB;UAAEG;QAAc,CAAC;QAChCC,UAAU,CAAC,MAAM;UACbC,KAAK,CAACC,IAAI,CAACC,SAAS,CAACP,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;UACtCG,aAAa,CAAC,KAAK,CAAC;QACxB,CAAC,EAAE,GAAG,CAAC;MACX,CAAE;MAAA,UAED;QAAA,IAAC;UAAEK;QAAa,CAAC;QAAA,oBACd,QAAC,IAAI;UAAA,wBACD,QAAC,KAAK;YAAC,IAAI,EAAC,OAAO;YAAC,IAAI,EAAC;UAAO;YAAA;YAAA;YAAA;UAAA,QAAG,eACnC,QAAC,YAAY;YAAC,IAAI,EAAC,OAAO;YAAC,SAAS,EAAC;UAAK;YAAA;YAAA;YAAA;UAAA,QAAG,eAC7C,QAAC,KAAK;YAAC,IAAI,EAAC,UAAU;YAAC,IAAI,EAAC;UAAU;YAAA;YAAA;YAAA;UAAA,QAAG,eACzC,QAAC,YAAY;YAAC,IAAI,EAAC,UAAU;YAAC,SAAS,EAAC;UAAK;YAAA;YAAA;YAAA;UAAA,QAAG,eAChD;YAAQ,IAAI,EAAC,QAAQ;YAAC,QAAQ,EAAEA,YAAa;YAAA,UAAC;UAE9C;YAAA;YAAA;YAAA;UAAA,QAAS;QAAA;UAAA;UAAA;UAAA;QAAA,QACN;MAAA;IACV;MAAA;MAAA;MAAA;IAAA,QACI;EAAA;IAAA;IAAA;IAAA;EAAA,QACP;AAEd,CAAC;AAAA,KAtCKX,KAAK;AAwCX,eAAeA,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}